// This file was automatically generated by the CUTLASS 3.5.1 Python interface (https://github.com/nvidia/cutlass/python)

#include <torch/extension.h>
#include <ATen/ATen.h>
#include <pybind11/stl.h>
#include <cassert>
#include <stdexcept>
#include <vector>
#include <utility>

template <int Tm, int Tn, int Tk>
void cutlass_tma_warp_specialized_kernel(const at::Tensor& A, const at::Tensor& B, at::Tensor& D);

void cutlass_tma_warp_specialized_64_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 16, 64>(A, B, D); }
void cutlass_tma_warp_specialized_64_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 16, 128>(A, B, D); }
void cutlass_tma_warp_specialized_64_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 16, 256>(A, B, D); }
void cutlass_tma_warp_specialized_64_16_512(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 16, 512>(A, B, D); }
void cutlass_tma_warp_specialized_64_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 32, 64>(A, B, D); }
void cutlass_tma_warp_specialized_64_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 32, 128>(A, B, D); }
void cutlass_tma_warp_specialized_64_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 32, 256>(A, B, D); }
void cutlass_tma_warp_specialized_64_32_512(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 32, 512>(A, B, D); }
void cutlass_tma_warp_specialized_64_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 64, 64>(A, B, D); }
void cutlass_tma_warp_specialized_64_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 64, 128>(A, B, D); }
void cutlass_tma_warp_specialized_64_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 64, 256>(A, B, D); }
void cutlass_tma_warp_specialized_64_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 128, 64>(A, B, D); }
void cutlass_tma_warp_specialized_64_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 128, 128>(A, B, D); }
void cutlass_tma_warp_specialized_64_128_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 128, 256>(A, B, D); }
void cutlass_tma_warp_specialized_64_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 256, 64>(A, B, D); }
void cutlass_tma_warp_specialized_64_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 256, 128>(A, B, D); }
void cutlass_tma_warp_specialized_64_512_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 512, 64>(A, B, D); }

void cutlass_tma_warp_specialized_128_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 16, 64>(A, B, D); }
void cutlass_tma_warp_specialized_128_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 16, 128>(A, B, D); }
void cutlass_tma_warp_specialized_128_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 16, 256>(A, B, D); }
void cutlass_tma_warp_specialized_128_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 32, 64>(A, B, D); }
void cutlass_tma_warp_specialized_128_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 32, 128>(A, B, D); }
void cutlass_tma_warp_specialized_128_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 32, 256>(A, B, D); }
void cutlass_tma_warp_specialized_128_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 64, 64>(A, B, D); }
void cutlass_tma_warp_specialized_128_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 64, 128>(A, B, D); }
void cutlass_tma_warp_specialized_128_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 64, 256>(A, B, D); }
void cutlass_tma_warp_specialized_128_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 128, 64>(A, B, D); }
void cutlass_tma_warp_specialized_128_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 128, 128>(A, B, D); }
void cutlass_tma_warp_specialized_128_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 256, 64>(A, B, D); }
void cutlass_tma_warp_specialized_128_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 256, 128>(A, B, D); }
void cutlass_tma_warp_specialized_128_512_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 512, 64>(A, B, D); }

void cutlass_tma_warp_specialized_256_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 16, 64>(A, B, D); }
void cutlass_tma_warp_specialized_256_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 16, 128>(A, B, D); }
void cutlass_tma_warp_specialized_256_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 32, 64>(A, B, D); }
void cutlass_tma_warp_specialized_256_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 32, 128>(A, B, D); }
void cutlass_tma_warp_specialized_256_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 64, 64>(A, B, D); }
void cutlass_tma_warp_specialized_256_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 64, 128>(A, B, D); }
void cutlass_tma_warp_specialized_256_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 128, 64>(A, B, D); }
void cutlass_tma_warp_specialized_256_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 128, 128>(A, B, D); }
void cutlass_tma_warp_specialized_256_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 256, 64>(A, B, D); }
void cutlass_tma_warp_specialized_256_512_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 512, 64>(A, B, D); }

void cutlass_tma_warp_specialized_512_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<512, 16, 64>(A, B, D); }
void cutlass_tma_warp_specialized_512_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<512, 32, 64>(A, B, D); }
void cutlass_tma_warp_specialized_512_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<512, 64, 64>(A, B, D); }
void cutlass_tma_warp_specialized_512_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<512, 128, 64>(A, B, D); }
void cutlass_tma_warp_specialized_512_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<512, 256, 64>(A, B, D); }


template <int Tm, int Tn, int Tk, int C1, int C2, int C3>
void cutlass_tma_warp_specialized_cooperative_kernel(const at::Tensor& A, const at::Tensor& B, at::Tensor& D);

void cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 16, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 16, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 16, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 32, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 32, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 32, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 64, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 64, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 64, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 128, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 128, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 256, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 256, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_512_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 512, 64, 2, 1, 1>(A, B, D); }

void cutlass_tma_warp_specialized_cooperative_2_1_1_256_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 16, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_256_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 16, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_256_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 32, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_256_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 32, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_256_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 64, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_256_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 64, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_256_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 128, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_256_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 128, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_256_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 256, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_256_512_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 512, 64, 2, 1, 1>(A, B, D); }

void cutlass_tma_warp_specialized_cooperative_2_1_1_512_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<512, 16, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_512_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<512, 32, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_512_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<512, 64, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_512_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<512, 128, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_512_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<512, 256, 64, 2, 1, 1>(A, B, D); }


void cutlass_tma_warp_specialized_cooperative_1_2_1_128_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 16, 64, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_128_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 16, 128, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_128_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 16, 256, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_128_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 32, 64, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_128_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 32, 128, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_128_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 32, 256, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_128_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 64, 64, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_128_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 64, 128, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_128_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 64, 256, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_128_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 128, 64, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_128_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 128, 128, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_128_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 256, 64, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_128_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 256, 128, 1, 2, 1>(A, B, D); }

void cutlass_tma_warp_specialized_cooperative_1_2_1_256_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 16, 64, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_256_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 16, 128, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_256_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 32, 64, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_256_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 32, 128, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_256_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 64, 64, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_256_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 64, 128, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_256_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 128, 64, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_256_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 128, 128, 1, 2, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_256_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 256, 64, 1, 2, 1>(A, B, D); }


void cutlass_tma_warp_specialized_cooperative_1_1_1_128_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 16, 64, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_128_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 16, 128, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_128_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 16, 256, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_128_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 32, 64, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_128_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 32, 128, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_128_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 32, 256, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_128_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 64, 64, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_128_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 64, 128, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_128_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 64, 256, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_128_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 128, 64, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_128_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 128, 128, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_128_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 256, 64, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_128_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 256, 128, 1, 1, 1>(A, B, D); }

void cutlass_tma_warp_specialized_cooperative_1_1_1_256_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 16, 64, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_256_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 16, 128, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_256_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 32, 64, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_256_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 32, 128, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_256_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 64, 64, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_256_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 64, 128, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_256_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 128, 64, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_256_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 128, 128, 1, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_256_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 256, 64, 1, 1, 1>(A, B, D); }



template <int Tm, int Tn, int Tk, int C1, int C2, int C3>
void cutlass_tma_warp_specialized_fp8_scale_kernel(const at::Tensor& A, const at::Tensor& B, at::Tensor& D);

void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 16, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 16, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 16, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 32, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 32, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 32, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 64, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 64, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 64, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 128, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 128, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 128, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 256, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_256_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 256, 256, 2, 1, 1>(A, B, D); }

void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 16, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 16, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 16, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 32, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 32, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 32, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 64, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 64, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 64, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 128, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_128_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 128, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 256, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_256_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 256, 256, 2, 1, 1>(A, B, D); }

void cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<256, 16, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<256, 16, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<256, 32, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<256, 32, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<256, 64, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<256, 64, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<256, 128, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_128_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<256, 128, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<256, 256, 128, 2, 1, 1>(A, B, D); }


template <int Tm, int Tn, int Tk, int C1, int C2, int C3>
void cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel(const at::Tensor& A, const at::Tensor& B, at::Tensor&D);

void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 16, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 16, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 16, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 32, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 32, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 32, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 64, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 64, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 64, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 128, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_128_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 128, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 256, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_256_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 256, 256, 2, 1, 1>(A, B, D); }

void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<256, 16, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<256, 16, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<256, 32, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<256, 32, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<256, 64, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<256, 64, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<256, 128, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_128_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<256, 128, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<256, 256, 128, 2, 1, 1>(A, B, D); }


// void cutlass_tma_warp_specialized_mixed_kernel(const at::Tensor& A, const at::Tensor& B, at::optional<const at::Tensor>, at::Tensor&D C=at::nullopt, float alpha=1.f, float beta=0.f);
// void cutlass_tma_warp_specialized_mixed(const at::Tensor& A, const at::Tensor& B, at::optional<const at::Tensor> C, at::Tensor&D=at::nullopt, float alpha=1.f, float beta=0.f) {
//   return cutlass_tma_warp_specialized_mixed_kernel(A, B, C, alpha, beta);
// }

// void cutlass_tma_warp_specialized_cooperative_mixed_kernel(const at::Tensor& A, const at::Tensor& B, at::optional<const at::Tensor>, at::Tensor&D C=at::nullopt, float alpha=1.f, float beta=0.f);
// void cutlass_tma_warp_specialized_cooperative_mixed(const at::Tensor& A, const at::Tensor& B, at::optional<const at::Tensor> C, at::Tensor&D=at::nullopt, float alpha=1.f, float beta=0.f) {
//   return cutlass_tma_warp_specialized_cooperative_mixed_kernel(A, B, C, alpha, beta);
// }

template <int Tm, int Tn, int Tk>
void cutlass_tma_warp_specialized_custom_kernel(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D);

void cutlass_tma_warp_specialized_custom_64_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 16, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 16, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 16, 256>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_16_512(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 16, 512>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 32, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 32, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 32, 256>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_32_512(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 32, 512>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 64, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 64, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 64, 256>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 128, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 128, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_128_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 128, 256>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 256, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 256, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_512_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 512, 64>(A1, A2, B, D); }

void cutlass_tma_warp_specialized_custom_128_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 16, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 16, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 16, 256>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 32, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 32, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 32, 256>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 64, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 64, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 64, 256>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 128, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 128, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 256, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 256, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_512_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 512, 64>(A1, A2, B, D); }

void cutlass_tma_warp_specialized_custom_256_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 16, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_256_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 16, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_256_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 32, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_256_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 32, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_256_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 64, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_256_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 64, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_256_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 128, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_256_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 128, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_256_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 256, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_256_512_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 512, 64>(A1, A2, B, D); }

void cutlass_tma_warp_specialized_custom_512_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<512, 16, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_512_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<512, 32, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_512_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<512, 64, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_512_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<512, 128, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_512_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<512, 256, 64>(A1, A2, B, D); }


template <int Tm, int Tn, int Tk, int C1, int C2, int C3>
void cutlass_tma_warp_specialized_cooperative_custom_kernel(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D);

void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 16, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 16, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 16, 256, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 32, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 32, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 32, 256, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 64, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 64, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 64, 256, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 128, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 128, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 256, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 256, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_512_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 512, 64, 2, 1, 1>(A1, A2, B, D); }

void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 16, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 16, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 32, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 32, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 64, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 64, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 128, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 128, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 256, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_512_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 512, 64, 2, 1, 1>(A1, A2, B, D); }

void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_512_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<512, 16, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_512_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<512, 32, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_512_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<512, 64, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_512_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<512, 128, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_512_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<512, 256, 64, 2, 1, 1>(A1, A2, B, D); }


void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 16, 64, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 16, 128, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 16, 256, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 32, 64, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 32, 128, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 32, 256, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 64, 64, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 64, 128, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 64, 256, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 128, 64, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 128, 128, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 256, 64, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 256, 128, 1, 2, 1>(A1, A2, B, D); }

void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 16, 64, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 16, 128, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 32, 64, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 32, 128, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 64, 64, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 64, 128, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 128, 64, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 128, 128, 1, 2, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 256, 64, 1, 2, 1>(A1, A2, B, D); }


void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 16, 64, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 16, 128, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 16, 256, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 32, 64, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 32, 128, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 32, 256, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 64, 64, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 64, 128, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 64, 256, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 128, 64, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 128, 128, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 256, 64, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 256, 128, 1, 1, 1>(A1, A2, B, D); }

void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 16, 64, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 16, 128, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 32, 64, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 32, 128, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 64, 64, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 64, 128, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 128, 64, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 128, 128, 1, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 256, 64, 1, 1, 1>(A1, A2, B, D); }

template <int Tm, int Tn, int Tk, int C1, int C2, int C3>
void cutlass_tma_warp_specialized_cooperative_streamk_kernel(const at::Tensor& A, const at::Tensor& B, at::Tensor& D);

void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 16, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 16, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 16, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 32, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 32, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 32, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 64, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 64, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 64, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 128, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 128, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 256, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 256, 128, 2, 1, 1>(A, B, D); }

void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<256, 16, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<256, 16, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<256, 32, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<256, 32, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<256, 64, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<256, 64, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<256, 128, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<256, 128, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<256, 256, 64, 2, 1, 1>(A, B, D); }


template <int Tm, int Tn, int Tk, int C1, int C2, int C3>
void cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D);

// Cluster Shape : <2, 1, 1>
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 16, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 16, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 16, 256, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 32, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 32, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 32, 256, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 64, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 64, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 64, 256, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 128, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 128, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 256, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 256, 128, 2, 1, 1>(A1, A2, B, D); }

void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<256, 16, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<256, 16, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<256, 32, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<256, 32, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<256, 64, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<256, 64, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<256, 128, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<256, 128, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<256, 256, 64, 2, 1, 1>(A1, A2, B, D); }


template <int Tm, int Tn, int Tk, int C1, int C2, int C3>
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B);

// Cluster Shape : <2, 1, 1>
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<128, 16, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<128, 16, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<128, 16, 256, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<128, 32, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<128, 32, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<128, 32, 256, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<128, 64, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<128, 64, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<128, 64, 256, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<128, 128, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<128, 128, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<128, 256, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<128, 256, 128, 2, 1, 1>(A1, A2, B); }

at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<256, 16, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<256, 16, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<256, 32, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<256, 32, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<256, 64, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<256, 64, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<256, 128, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<256, 128, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_kernel<256, 256, 64, 2, 1, 1>(A1, A2, B); }


template <int Tm, int Tn, int Tk, int C1, int C2, int C3>
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B);

// Cluster Shape : <2, 1, 1>
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<128, 16, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<128, 16, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<128, 16, 256, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<128, 32, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<128, 32, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<128, 32, 256, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<128, 64, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<128, 64, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<128, 64, 256, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<128, 128, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<128, 128, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<128, 256, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<128, 256, 128, 2, 1, 1>(A1, A2, B); }

at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<256, 16, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<256, 16, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<256, 32, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<256, 32, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<256, 64, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<256, 64, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<256, 128, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<256, 128, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_kernel<256, 256, 64, 2, 1, 1>(A1, A2, B); }


template <int Tm, int Tn, int Tk, int C1, int C2, int C3>
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B);

// Cluster Shape : <2, 1, 1>
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<128, 16, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<128, 16, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<128, 16, 256, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<128, 32, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<128, 32, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<128, 32, 256, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<128, 64, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<128, 64, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<128, 64, 256, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<128, 128, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<128, 128, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<128, 256, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<128, 256, 128, 2, 1, 1>(A1, A2, B); }

at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<256, 16, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<256, 16, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<256, 32, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<256, 32, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<256, 64, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<256, 64, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<256, 128, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<256, 128, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_2_stage_kernel<256, 256, 64, 2, 1, 1>(A1, A2, B); }


template <int Tm, int Tn, int Tk, int C1, int C2, int C3>
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B);

// Cluster Shape : <2, 1, 1>
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<128, 16, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<128, 16, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<128, 16, 256, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<128, 32, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<128, 32, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<128, 32, 256, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<128, 64, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<128, 64, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<128, 64, 256, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<128, 128, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<128, 128, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<128, 256, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<128, 256, 128, 2, 1, 1>(A1, A2, B); }

at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<256, 16, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<256, 16, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<256, 32, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<256, 32, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<256, 64, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<256, 64, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<256, 128, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<256, 128, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_kernel<256, 256, 64, 2, 1, 1>(A1, A2, B); }


template <int Tm, int Tn, int Tk>
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_kernel(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B);

at::Tensor cutlass_tma_warp_specialized_custom_2_stage_64_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<64, 16, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_64_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<64, 16, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_64_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<64, 16, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_64_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<64, 32, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_64_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<64, 32, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_64_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<64, 32, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_64_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<64, 64, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_64_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<64, 64, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_64_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<64, 64, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_64_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<64, 128, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_64_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<64, 128, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_64_128_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<64, 128, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_64_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<64, 256, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_64_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<64, 256, 128>(A1, A2, B); }

at::Tensor cutlass_tma_warp_specialized_custom_2_stage_128_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<128, 16, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_128_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<128, 16, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_128_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<128, 16, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_128_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<128, 32, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_128_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<128, 32, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_128_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<128, 32, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_128_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<128, 64, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_128_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<128, 64, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_128_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<128, 64, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_128_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<128, 128, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_128_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<128, 128, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_128_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<128, 256, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_128_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<128, 256, 128>(A1, A2, B); }

at::Tensor cutlass_tma_warp_specialized_custom_2_stage_256_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<256, 16, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_256_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<256, 16, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_256_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<256, 32, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_256_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<256, 32, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_256_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<256, 64, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_256_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<256, 64, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_256_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<256, 128, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_256_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<256, 128, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_2_stage_256_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_2_stage_kernel<256, 256, 64>(A1, A2, B); }

template <int Tm, int Tn, int Tk>
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_kernel(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B);

at::Tensor cutlass_tma_warp_specialized_custom_3_stage_64_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<64, 16, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_64_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<64, 16, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_64_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<64, 16, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_64_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<64, 32, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_64_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<64, 32, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_64_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<64, 32, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_64_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<64, 64, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_64_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<64, 64, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_64_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<64, 64, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_64_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<64, 128, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_64_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<64, 128, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_64_128_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<64, 128, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_64_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<64, 256, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_64_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<64, 256, 128>(A1, A2, B); }

at::Tensor cutlass_tma_warp_specialized_custom_3_stage_128_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<128, 16, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_128_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<128, 16, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_128_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<128, 16, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_128_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<128, 32, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_128_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<128, 32, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_128_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<128, 32, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_128_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<128, 64, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_128_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<128, 64, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_128_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<128, 64, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_128_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<128, 128, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_128_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<128, 128, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_128_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<128, 256, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_128_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<128, 256, 128>(A1, A2, B); }

at::Tensor cutlass_tma_warp_specialized_custom_3_stage_256_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<256, 16, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_256_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<256, 16, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_256_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<256, 32, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_256_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<256, 32, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_256_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<256, 64, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_256_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<256, 64, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_256_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<256, 128, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_256_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<256, 128, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_256_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_kernel<256, 256, 64>(A1, A2, B); }


template <int Tm, int Tn, int Tk, int C1, int C2, int C3>
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B);

// Cluster Shape : <2, 1, 1>
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<128, 16, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<128, 16, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<128, 16, 256, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<128, 32, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<128, 32, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<128, 32, 256, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<128, 64, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<128, 64, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<128, 64, 256, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<128, 128, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<128, 128, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<128, 256, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<128, 256, 128, 2, 1, 1>(A1, A2, B); }

at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<256, 16, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<256, 16, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<256, 32, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<256, 32, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<256, 64, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<256, 64, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<256, 128, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<256, 128, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_kernel<256, 256, 64, 2, 1, 1>(A1, A2, B); }

template <int Tm, int Tn, int Tk, int C1, int C2, int C3>
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B);

// Cluster Shape : <2, 1, 1>
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<128, 16, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<128, 16, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<128, 16, 256, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<128, 32, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<128, 32, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<128, 32, 256, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<128, 64, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<128, 64, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<128, 64, 256, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<128, 128, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<128, 128, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<128, 256, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<128, 256, 128, 2, 1, 1>(A1, A2, B); }

at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<256, 16, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<256, 16, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<256, 32, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<256, 32, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<256, 64, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<256, 64, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<256, 128, 64, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<256, 128, 128, 2, 1, 1>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_kernel<256, 256, 64, 2, 1, 1>(A1, A2, B); }

template <int Tm, int Tn, int Tk>
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B);

at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<64, 16, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<64, 16, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<64, 16, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<64, 32, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<64, 32, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<64, 32, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<64, 64, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<64, 64, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<64, 64, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<64, 128, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<64, 128, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_128_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<64, 128, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<64, 256, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<64, 256, 128>(A1, A2, B); }

at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<128, 16, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<128, 16, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<128, 16, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<128, 32, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<128, 32, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<128, 32, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<128, 64, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<128, 64, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<128, 64, 256>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<128, 128, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<128, 128, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<128, 256, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<128, 256, 128>(A1, A2, B); }

at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<256, 16, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<256, 16, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<256, 32, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<256, 32, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<256, 64, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<256, 64, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<256, 128, 64>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<256, 128, 128>(A1, A2, B); }
at::Tensor cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) { return cutlass_tma_warp_specialized_custom_3_stage_naive_simt_kernel<256, 256, 64>(A1, A2, B); }


void divide_fp16(const at::Tensor& S, const at::Tensor& D1, const at::Tensor& D2);
void merge_fp8(const at::Tensor& S1, const at::Tensor& S2, const at::Tensor& D);
void naive_divide_fp16(const at::Tensor& S, const at::Tensor& D1, const at::Tensor& D2);
void naive_merge_fp8(const at::Tensor& S1, const at::Tensor& S2, const at::Tensor& D);
bool cublas_tn(const torch::Tensor& X, const torch::Tensor& W, const torch::Tensor& Y);


// using KernelFunc = at::Tensor(*)(const at::Tensor&, const at::Tensor&);


// at::Tensor fp8_custom(int M, int N, int K, const at::Tensor& A, const at::Tensor& B) {
//   using KernelFunc = at::Tensor(*)(const at::Tensor&, const at::Tensor&);

//   static const std::vector<KernelFunc> kernel_array = {
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_128,   // fp8_1
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_256,   // fp8_2
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_512,   // fp8_3
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_128,   // fp8_4
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_256,   // fp8_5
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_512,   // fp8_6
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_128,   // fp8_7
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_256,   // fp8_8
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_512,   // fp8_9
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_128,  // fp8_10
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_256,  // fp8_11
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_512,  // fp8_12
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_256_128,  // fp8_13
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_256_256,  // fp8_14
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_128,  // fp8_15
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_256,  // fp8_16
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_512,  // fp8_17
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_128,  // fp8_18
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_256,  // fp8_19
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_512,  // fp8_20
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_128,  // fp8_21
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_256,  // fp8_22
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_512,  // fp8_23
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_128_128, // fp8_24
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_128_256, // fp8_25
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_256_128, // fp8_26
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_256_256, // fp8_27
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_16_128,  // fp8_28
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_16_256,  // fp8_29
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_32_128,  // fp8_30
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_32_256,  // fp8_31
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_64_128,  // fp8_32
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_64_256,  // fp8_33
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_128_128, // fp8_34
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_128_256, // fp8_35
//     cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_256_128, // fp8_36
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_128,  // fp8_37
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_256,  // fp8_38
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_512,  // fp8_39
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_128,  // fp8_40
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_256,  // fp8_41
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_512,  // fp8_42
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_128,  // fp8_43
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_256,  // fp8_44
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_512,  // fp8_45
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_128_128, // fp8_46
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_128_256, // fp8_47
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_256_128, // fp8_48
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_256_256, // fp8_49
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_16_128,  // fp8_50
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_16_256,  // fp8_51
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_32_128,  // fp8_52
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_32_256,  // fp8_53
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_64_128,  // fp8_54
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_64_256,  // fp8_55
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_128_128, // fp8_56
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_128_256, // fp8_57
//     cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_256_128  // fp8_58
// };

//   // 2. (N, K)에 따른 range → kernel 선택 매핑
//   std::vector<std::pair<int, int>> range_kernel_map;
//   if (N == 4096 && K == 4096) {
//       range_kernel_map = {
//           {64, 4},    // fp8_5
//           {96, 18},   // fp8_19
//           {128, 7},   // fp8_8
//           {160, 21},  // fp8_22
//           {192, 20},  // fp8_21
//           {224, 21},  // fp8_22
//           {256, 9},   // fp8_10
//           {320, 23},  // fp8_24
//           {384, 45},  // fp8_46
//           {416, 31},  // fp8_32
//           {480, 23},  // fp8_24
//           {512, 23},  // fp8_24
//           {896, 55},  // fp8_56
//           {1024, 47}, // fp8_48
//           {1216, 45}, // fp8_46
//           {1248, 46}, // fp8_47
//           {1280, 45}, // fp8_46
//           {1344, 46}, // fp8_47
//           {1376, 45}, // fp8_46
//           {1408, 46}, // fp8_47
//           {1536, 45}, // fp8_46
//           {1696, 55}, // fp8_56
//           {1792, 47}, // fp8_48
//           {1952, 55}, // fp8_56
//           {2048, 47}, // fp8_48
//           {std::numeric_limits<int>::max(), 47} // fp8_48
//       };
//   } 
//   else if (N == 6144 && K == 4096) {
//       range_kernel_map = {
//           {32, 5},    // fp8_6
//           {64, 7},    // fp8_8
//           {96, 10},   // fp8_11
//           {128, 9},   // fp8_10
//           {160, 23},  // fp8_24
//           {192, 31},  // fp8_32
//           {224, 23},  // fp8_24
//           {256, 45},  // fp8_46
//           {320, 31},  // fp8_32
//           {384, 55},  // fp8_56
//           {416, 47},  // fp8_48
//           {448, 55},  // fp8_56
//           {512, 47},  // fp8_48
//           {640, 55},  // fp8_56
//           {704, 53},  // fp8_54
//           {736, 46},  // fp8_47
//           {768, 45},  // fp8_46
//           {864, 46},  // fp8_47
//           {928, 45},  // fp8_46
//           {960, 47},  // fp8_48
//           {992, 45},  // fp8_46
//           {1024, 45}, // fp8_46
//           {1120, 47}, // fp8_48
//           {1152, 55}, // fp8_56
//           {1184, 47}, // fp8_48
//           {1280, 47}, // fp8_48
//           {1408, 55}, // fp8_56
//           {1600, 47}, // fp8_46
//           {1632, 55}, // fp8_48
//           {1664, 45}, // fp8_48
//           {1792, 47}, // fp8_48
//           {1920, 55}, // fp8_56
//           {1952, 47}, // fp8_48
//           {1984, 55}, // fp8_56
//           {2048, 47}, // fp8_48
//           {std::numeric_limits<int>::max(), 47} // fp8_48
//       };
//   }
//   else if (N == 28672 && K == 4096) {
//       range_kernel_map = {
//           {32, 39},   // fp8_40
//           {64, 42},   // fp8_43
//           {96, 45},   // fp8_46
//           {128, 55},  // fp8_56
//           {192, 47},  // fp8_48
//           {288, 55},  // fp8_56
//           {416, 47},  // fp8_48
//           {512, 47},  // fp8_48
//           {640, 55},  // fp8_56
//           {768, 47},  // fp8_48
//           {896, 55},  // fp8_56
//           {1024, 47}, // fp8_48
//           {1152, 55}, // fp8_56
//           {1280, 47}, // fp8_48
//           {1408, 55}, // fp8_56
//           {1536, 47}, // fp8_48
//           {1664, 47}, // fp8_48
//           {1792, 47}, // fp8_48
//           {1920, 55}, // fp8_56
//           {2048, 47}, // fp8_48
//           {std::numeric_limits<int>::max(), 47} // fp8_48
//       };
//   }
//   else if (N == 4096 && K == 14336) {
//       range_kernel_map = {
//           {32, 4},    // fp8_5
//           {64, 6},    // fp8_7
//           {96, 17},   // fp8_18
//           {128, 7},   // fp8_8
//           {160, 20},  // fp8_21
//           {192, 20},  // fp8_21
//           {224, 45},  // fp8_46
//           {256, 9},   // fp8_10
//           {320, 23},  // fp8_24
//           {384, 23},  // fp8_24
//           {416, 31},  // fp8_32
//           {480, 31},  // fp8_32
//           {512, 23},  // fp8_24
//           {640, 55},  // fp8_56
//           {768, 47},  // fp8_48
//           {896, 55},  // fp8_56
//           {1024, 47}, // fp8_48
//           {1055, 23}, // fp8_24
//           {1088, 23}, // fp8_24
//           {1152, 23}, // fp8_24
//           {1216, 46}, // fp8_47
//           {1248, 45}, // fp8_46
//           {1408, 45}, // fp8_46
//           {1440, 55}, // fp8_56
//           {1504, 47}, // fp8_48
//           {1536, 45}, // fp8_46
//           {1600, 47}, // fp8_48
//           {1664, 55}, // fp8_56
//           {1792, 47}, // fp8_48
//           {1920, 47}, // fp8_48
//           {2048, 47}, // fp8_48
//           {std::numeric_limits<int>::max(), 47} // fp8_48
//       };
//   }
//   else {
//     range_kernel_map = {
//         {32, 4},    // fp8_5
//         {64, 6},    // fp8_7
//         {96, 17},   // fp8_18
//         {128, 7},   // fp8_8
//         {160, 20},  // fp8_21
//         {192, 20},  // fp8_21
//         {224, 45},  // fp8_46
//         {256, 9},   // fp8_10
//         {320, 23},  // fp8_24
//         {384, 23},  // fp8_24
//         {416, 31},  // fp8_32
//         {480, 31},  // fp8_32
//         {512, 23},  // fp8_24
//         {640, 55},  // fp8_56
//         {768, 47},  // fp8_48
//         {896, 55},  // fp8_56
//         {1024, 47}, // fp8_48
//         {1055, 23}, // fp8_24
//         {1088, 23}, // fp8_24
//         {1152, 23}, // fp8_24
//         {1216, 46}, // fp8_47
//         {1248, 45}, // fp8_46
//         {1408, 45}, // fp8_46
//         {1440, 55}, // fp8_56
//         {1504, 47}, // fp8_48
//         {1536, 45}, // fp8_46
//         {1600, 47}, // fp8_48
//         {1664, 55}, // fp8_56
//         {1792, 47}, // fp8_48
//         {1920, 47}, // fp8_48
//         {2048, 47}, // fp8_48
//         {std::numeric_limits<int>::max(), 47} // fp8_48
//         };
//     }
      

//  // 3. M에 따라 커널 인덱스 선택
//   int selected_index = -1;
//   for (const auto& [upper_bound, kernel_idx] : range_kernel_map) {
//       if (M <= upper_bound) {
//           selected_index = kernel_idx;
//           break;
//       }
//   }

//   if (selected_index < 0 || selected_index >= static_cast<int>(std::size(kernel_array))) {
//       throw std::runtime_error("Kernel index out of range: " + std::to_string(selected_index));
//   }

//   // 4. 실행
//   KernelFunc selected_kernel = kernel_array[selected_index];
//   return selected_kernel(A, B);
// }


// at::Tensor fp16_baseline(int M, int N, int K, const at::Tensor& A, const at::Tensor& B) {

//   using KernelFunc = at::Tensor(*)(const at::Tensor&, const at::Tensor&);

//   static constexpr KernelFunc kernel_array[] = {
//       cutlass_tma_warp_specialized_64_16_64,      // 0
//       cutlass_tma_warp_specialized_64_16_128,     // 1
//       cutlass_tma_warp_specialized_64_16_256,     // 2
//       cutlass_tma_warp_specialized_64_32_64,      // 3
//       cutlass_tma_warp_specialized_64_32_128,     // 4
//       cutlass_tma_warp_specialized_64_32_256,     // 5
//       cutlass_tma_warp_specialized_64_64_64,      // 6
//       cutlass_tma_warp_specialized_64_64_128,     // 7
//       cutlass_tma_warp_specialized_64_64_256,     // 8
//       cutlass_tma_warp_specialized_64_128_64,     // 9
//       cutlass_tma_warp_specialized_64_128_128,    // 10
//       cutlass_tma_warp_specialized_64_128_256,    // 11
//       cutlass_tma_warp_specialized_64_256_64,     // 12
//       cutlass_tma_warp_specialized_64_256_128,    // 13
//       cutlass_tma_warp_specialized_128_16_64,     // 14
//       cutlass_tma_warp_specialized_128_16_128,    // 15
//       cutlass_tma_warp_specialized_128_16_256,    // 16
//       cutlass_tma_warp_specialized_128_32_64,     // 17
//       cutlass_tma_warp_specialized_128_32_128,    // 18
//       cutlass_tma_warp_specialized_128_32_256,    // 19
//       cutlass_tma_warp_specialized_128_64_64,     // 20
//       cutlass_tma_warp_specialized_128_64_128,    // 21
//       cutlass_tma_warp_specialized_128_64_256,    // 22
//       cutlass_tma_warp_specialized_128_128_64,    // 23
//       cutlass_tma_warp_specialized_128_128_128,   // 24
//       cutlass_tma_warp_specialized_128_256_64,    // 25
//       cutlass_tma_warp_specialized_128_256_128,   // 26
//       cutlass_tma_warp_specialized_256_16_64,     // 27
//       cutlass_tma_warp_specialized_256_16_128,    // 28
//       cutlass_tma_warp_specialized_256_32_64,     // 29
//       cutlass_tma_warp_specialized_256_32_128,    // 30
//       cutlass_tma_warp_specialized_256_64_64,     // 31
//       cutlass_tma_warp_specialized_256_64_128,    // 32
//       cutlass_tma_warp_specialized_256_128_64,    // 33
//       cutlass_tma_warp_specialized_256_128_128,   // 34
//       cutlass_tma_warp_specialized_256_256_64,    // 35
//       cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_64,  // 36
//       cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_128, // 37
//       cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_256, // 38
//       cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_64,  // 39
//       cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_128, // 40
//       cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_256, // 41
//       cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_64,  // 42
//       cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_128, // 43
//       cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_256, // 44
//       cutlass_tma_warp_specialized_cooperative_2_1_1_128_128_64, // 45
//       cutlass_tma_warp_specialized_cooperative_2_1_1_128_128_128,// 46
//       cutlass_tma_warp_specialized_cooperative_2_1_1_128_256_64, // 47
//       cutlass_tma_warp_specialized_cooperative_2_1_1_128_256_128,// 48
//       cutlass_tma_warp_specialized_cooperative_2_1_1_256_16_64,  // 49
//       cutlass_tma_warp_specialized_cooperative_2_1_1_256_16_128, // 50
//       cutlass_tma_warp_specialized_cooperative_2_1_1_256_32_64,  // 51
//       cutlass_tma_warp_specialized_cooperative_2_1_1_256_32_128, // 52
//       cutlass_tma_warp_specialized_cooperative_2_1_1_256_64_64,  // 53
//       cutlass_tma_warp_specialized_cooperative_2_1_1_256_64_128, // 54
//       cutlass_tma_warp_specialized_cooperative_2_1_1_256_128_64, // 55
//       cutlass_tma_warp_specialized_cooperative_2_1_1_256_128_128,// 56
//       cutlass_tma_warp_specialized_cooperative_2_1_1_256_256_64, // 57
//   };

//   std::vector<std::pair<int, int>> range_kernel_map;  // <upper_bound, kernel_array index>

//   if (N == 4096 && K == 4096) {
//       range_kernel_map = {
//           {32, 2}, {64, 6}, {96, 9}, {128, 7}, {160, 21}, {192, 20},
//           {224, 10}, {256, 9}, {288, 31}, {320, 23}, {352, 23}, {384, 45},
//           {416, 45}, {448, 12}, {512, 12}, {704, 55}, {768, 47}, {832, 55},
//           {928, 47}, {1024, 47}, {1280, 12}, {1376, 23}, {1440, 45},
//           {1536, 23}, {1600, 55}, {1664, 47}, {1760, 55}, {1920, 47},
//           {2048, 47}, {std::numeric_limits<int>::max(), 47},
//       };
//   }
//   else if (N == 6144 && K == 4096) {
//       range_kernel_map = {
//           {32, 3}, {64, 6}, {128, 9}, {160, 45}, {192, 23}, {256, 45},
//           {320, 31}, {416, 55}, {480, 47}, {640, 55}, {704, 53}, {800, 45},
//           {832, 47}, {896, 45}, {928, 47}, {1024, 45}, {1056, 55}, {1280, 47},
//           {1408, 55}, {1472, 47}, {1664, 45}, {1952, 47}, {1984, 55},
//           {2048, 47}, {std::numeric_limits<int>::max(), 47},
//       };
//   }
//   else if (N == 28672 && K == 4096) {
//       range_kernel_map = {
//           {32, 40}, {64, 43}, {128, 56}, {160, 55}, {256, 47}, {288, 55},
//           {320, 45}, {416, 55}, {512, 47}, {640, 55}, {768, 47},
//           {896, 55}, {1024, 47}, {1152, 55}, {1280, 47}, {1408, 55},
//           {1792, 47}, {1920, 55}, {2048, 47}, {std::numeric_limits<int>::max(), 47},
//       };
//   }
//   else if (N == 4096 && K == 14336) {
//       range_kernel_map = {
//           {32, 4}, {64, 6}, {96, 40}, {128, 7}, {160, 43}, {192, 42},
//           {224, 23}, {256, 9}, {448, 45}, {512, 23}, {608, 47}, {640, 55},
//           {768, 47}, {928, 55}, {1024, 47}, {1056, 23}, {1088, 45},
//           {1120, 23}, {1280, 45}, {1312, 47}, {1408, 45}, {1472, 47},
//           {1504, 12}, {1536, 45}, {1568, 55}, {1792, 47}, {1824, 55},
//           {2048, 47}, {std::numeric_limits<int>::max(), 47},
//       };
//   }
//   else {
//     range_kernel_map = {
//         {32, 4}, {64, 6}, {96, 40}, {128, 7}, {160, 43}, {192, 42},
//         {224, 23}, {256, 9}, {448, 45}, {512, 23}, {608, 47}, {640, 55},
//         {768, 47}, {928, 55}, {1024, 47}, {1056, 23}, {1088, 45},
//         {1120, 23}, {1280, 45}, {1312, 47}, {1408, 45}, {1472, 47},
//         {1504, 12}, {1536, 45}, {1568, 55}, {1792, 47}, {1824, 55},
//         {2048, 47}, {std::numeric_limits<int>::max(), 47},
//     };
//   }

//   // M에 따라 kernel index 선택
//   int selected_index = -1;
//   for (const auto& [upper_bound, kernel_idx] : range_kernel_map) {
//       if (M <= upper_bound) {
//           selected_index = kernel_idx;
//           break;
//       }
//   }

//   if (selected_index < 0 || selected_index >= static_cast<int>(std::size(kernel_array))) {
//       throw std::runtime_error("Kernel index out of range: " + std::to_string(selected_index));
//   }

//   KernelFunc selected_kernel = kernel_array[selected_index];
//   return selected_kernel(A, B);
// }


// at::Tensor fp16_custom(int M, int N, int K, const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B) {
//   using KernelFunc = at::Tensor(*)(const at::Tensor&, const at::Tensor&, const at::Tensor&);

//   static constexpr KernelFunc kernel_array[] = {
//       cutlass_tma_warp_specialized_custom_64_16_64,    // 0
//       cutlass_tma_warp_specialized_custom_64_16_128,   // 1
//       cutlass_tma_warp_specialized_custom_64_16_256,   // 2
//       cutlass_tma_warp_specialized_custom_64_32_64,    // 3
//       cutlass_tma_warp_specialized_custom_64_32_128,   // 4
//       cutlass_tma_warp_specialized_custom_64_32_256,   // 5
//       cutlass_tma_warp_specialized_custom_64_64_64,    // 6
//       cutlass_tma_warp_specialized_custom_64_64_128,   // 7
//       cutlass_tma_warp_specialized_custom_64_64_256,   // 8
//       cutlass_tma_warp_specialized_custom_64_128_64,   // 9
//       cutlass_tma_warp_specialized_custom_64_128_128,  // 10
//       cutlass_tma_warp_specialized_custom_64_128_256,  // 11
//       cutlass_tma_warp_specialized_custom_64_256_64,   // 12
//       cutlass_tma_warp_specialized_custom_64_256_128,  // 13
//       cutlass_tma_warp_specialized_custom_128_16_64,   // 14
//       cutlass_tma_warp_specialized_custom_128_16_128,  // 15
//       cutlass_tma_warp_specialized_custom_128_16_256,  // 16
//       cutlass_tma_warp_specialized_custom_128_32_64,   // 17
//       cutlass_tma_warp_specialized_custom_128_32_128,  // 18
//       cutlass_tma_warp_specialized_custom_128_32_256,  // 19
//       cutlass_tma_warp_specialized_custom_128_64_64,   // 20
//       cutlass_tma_warp_specialized_custom_128_64_128,  // 21
//       cutlass_tma_warp_specialized_custom_128_64_256,  // 22
//       cutlass_tma_warp_specialized_custom_128_128_64,  // 23
//       cutlass_tma_warp_specialized_custom_128_128_128, // 24
//       cutlass_tma_warp_specialized_custom_128_256_64,  // 25
//       cutlass_tma_warp_specialized_custom_128_256_128, // 26
//       cutlass_tma_warp_specialized_custom_256_16_64,   // 27
//       cutlass_tma_warp_specialized_custom_256_16_128,  // 28
//       cutlass_tma_warp_specialized_custom_256_32_64,   // 29
//       cutlass_tma_warp_specialized_custom_256_32_128,  // 30
//       cutlass_tma_warp_specialized_custom_256_64_64,   // 31
//       cutlass_tma_warp_specialized_custom_256_64_128,  // 32
//       cutlass_tma_warp_specialized_custom_256_128_64,  // 33
//       cutlass_tma_warp_specialized_custom_256_128_128, // 34
//       cutlass_tma_warp_specialized_custom_256_256_64,  // 35
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_64,  // 36
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_128, // 37
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_256, // 38
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_64,  // 39
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_128, // 40
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_256, // 41
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_64,  // 42
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_128, // 43
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_256, // 44
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_128_64, // 45
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_128_128,// 46
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_256_64, // 47
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_256_128,// 48
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_16_64,  // 49
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_16_128, // 50
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_32_64,  // 51
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_32_128, // 52
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_64_64,  // 53
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_64_128, // 54
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_128_64, // 55
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_128_128,// 56
//       cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_256_64, // 57
//   };

//   std::vector<std::pair<int, int>> range_kernel_map; // <upper_bound, index>

//   if (N == 4096 && K == 4096) {
//       range_kernel_map = {
//           {32, 4}, {64, 5}, {128, 7}, {256, 9}, {512, 12},
//           {1024, 47}, {1536, 12}, {2048, 47},
//           {std::numeric_limits<int>::max(), 47},
//       };
//   }
//   else if (N == 6144 && K == 4096) {
//       range_kernel_map = {
//           {32, 5}, {64, 7}, {128, 9}, {160, 45}, {192, 12}, {224, 45},
//           {256, 12}, {320, 47}, {512, 47}, {640, 55}, {704, 12}, {768, 12},
//           {800, 47}, {832, 47}, {864, 12}, {896, 47}, {928, 12}, {960, 12},
//           {1024, 47}, {1280, 47}, {1408, 55}, {1536, 47}, {2048, 47},
//           {std::numeric_limits<int>::max(), 47},
//       };
//   }
//   else if (N == 28672 && K == 4096) {
//       range_kernel_map = {
//           {32, 40}, {64, 53}, {128, 55}, {256, 47}, {384, 55},
//           {2048, 47}, {std::numeric_limits<int>::max(), 47},
//       };
//   }
//   else if (N == 4096 && K == 14336) {
//       range_kernel_map = {
//           {32, 4}, {128, 7}, {192, 10}, {256, 9}, {512, 12},
//           {1024, 47}, {1056, 12}, {1088, 47}, {1216, 12}, {1248, 47},
//           {1280, 12}, {1472, 47}, {1504, 12}, {2048, 47},
//           {std::numeric_limits<int>::max(), 47},
//       };
//   }
//   else {
//     range_kernel_map = {
//         {32, 4}, {128, 7}, {192, 10}, {256, 9}, {512, 12},
//         {1024, 47}, {1056, 12}, {1088, 47}, {1216, 12}, {1248, 47},
//         {1280, 12}, {1472, 47}, {1504, 12}, {2048, 47},
//         {std::numeric_limits<int>::max(), 47},
//     };
//   }

//   // M에 따라 kernel index 선택
//   int selected_index = -1;
//   for (const auto& [upper_bound, kernel_idx] : range_kernel_map) {
//       if (M <= upper_bound) {
//           selected_index = kernel_idx;
//           break;
//       }
//   }

//   if (selected_index < 0 || selected_index >= static_cast<int>(std::size(kernel_array))) {
//       throw std::runtime_error("Kernel index out of range: " + std::to_string(selected_index));
//   }

//   KernelFunc selected_kernel = kernel_array[selected_index];
//   return selected_kernel(A1, A2, B);
// }




PYBIND11_MODULE(TORCH_EXTENSION_NAME, m) {
  // m.def("run_tma_warp_specialized_mixed", py::overload_cast<const at::Tensor&, const at::Tensor&, at::optional<const at::Tensor>, float, float>(&cutlass_tma_warp_specialized_mixed), py::arg("A"), py::arg("B"), py::arg("C") = nullptr, py::arg("alpha") = 1.f, py::arg("beta") = 0.f);
  // m.def("run_tma_warp_specialized_cooperative_mixed", py::overload_cast<const at::Tensor&, const at::Tensor&, at::optional<const at::Tensor>, float, float>(&cutlass_tma_warp_specialized_cooperative_mixed), py::arg("A"), py::arg("B"), py::arg("C") = nullptr, py::arg("alpha") = 1.f, py::arg("beta") = 0.f);

  m.def("divide_fp16", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&divide_fp16), py::arg("S"), py::arg("D1"), py::arg("D2"));
  m.def("merge_fp8", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&merge_fp8), py::arg("S1"), py::arg("S2"), py::arg("D"));
  m.def("naive_divide_fp16", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&naive_divide_fp16), py::arg("S"), py::arg("D1"), py::arg("D2"));
  m.def("naive_merge_fp8", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&naive_merge_fp8), py::arg("S1"), py::arg("S2"), py::arg("D"));
  m.def("cublas_tn", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cublas_tn), py::arg("X"), py::arg("W"), py::arg("Y")); 
  

  // baseline. no cooperative
  m.def("cutlass_tma_warp_specialized_64_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_16_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_16_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_32_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_32_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_128_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_128_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_256_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_256_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_512_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_512_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_256_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_256_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_512_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_512_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_256_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_512_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_512_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_512_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_512_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_512_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_512_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_512_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_512_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_512_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_512_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_512_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_512_256_64), py::arg("A"), py::arg("B"), py::arg("D"));  

  // baseline. cooperative
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_256_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_256_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_512_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_512_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_256_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_512_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_512_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_512_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_512_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_512_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_512_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_512_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_512_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_512_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_512_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_512_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_512_256_64), py::arg("A"), py::arg("B"), py::arg("D"));
  
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_128_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_128_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_128_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_128_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_128_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_128_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_128_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_128_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_128_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_128_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_128_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_128_256_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_128_256_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_256_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_256_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_256_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_256_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_256_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_256_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_256_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_256_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_256_256_64), py::arg("A"), py::arg("B"), py::arg("D"));
  
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_128_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_128_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_128_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_128_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_128_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_128_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_128_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_128_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_128_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_128_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_128_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_128_256_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_128_256_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_256_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_256_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_256_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_256_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_256_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_256_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_256_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_256_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_256_256_64), py::arg("A"), py::arg("B"), py::arg("D"));
  

  // fp8. no cooperative
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_256_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_256_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_256_256), py::arg("A"), py::arg("B"), py::arg("D"));

  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_128_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_128_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_256_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_256_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_256_256), py::arg("A"), py::arg("B"), py::arg("D"));

  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_128_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_128_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_256_128), py::arg("A"), py::arg("B"), py::arg("D"));

  // fp8. cooperative
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_128_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_128_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_256_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_256_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_256_256), py::arg("A"), py::arg("B"), py::arg("D"));

  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_128_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_128_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_256_128), py::arg("A"), py::arg("B"), py::arg("D"));

  // custom. no cooperative
  m.def("cutlass_tma_warp_specialized_custom_64_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_16_512", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_16_512), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_32_512", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_32_512), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_128_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_128_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_512_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_512_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));

  m.def("cutlass_tma_warp_specialized_custom_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_512_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_512_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));

  m.def("cutlass_tma_warp_specialized_custom_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_256_512_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_512_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));

  m.def("cutlass_tma_warp_specialized_custom_512_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_512_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_512_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_512_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_512_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_512_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_512_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_512_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_512_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_512_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));

  // custom cooperative
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_512_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_512_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));

  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_512_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_512_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));

  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_512_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_512_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_512_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_512_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_512_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_512_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_512_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_512_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_512_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_512_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));  


  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_128_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));

  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_2_1_custom_256_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));

  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_128_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));

  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_1_1_1_custom_256_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));

  // baseline. cooperative streamk
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_256_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_256_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_256_64), py::arg("A"), py::arg("B"), py::arg("D"));

  // custom cooperative streamk
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));

  // custom 2 stage cooperative streamk
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_128_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"));

  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_stage_2_1_1_256_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));


  // custom 3 stage cooperative streamk
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_128_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"));

  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_2_1_1_256_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));


    // custom 2 stage cooperative 
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_128_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"));

  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_2_stage_2_1_1_256_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));


  // custom 3 stage cooperative 
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_128_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"));

  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_2_1_1_256_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));


  // custom. no cooperative 2 stage
  m.def("cutlass_tma_warp_specialized_custom_2_stage_64_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_64_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_64_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_64_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_64_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_64_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_64_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_64_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_64_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_64_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_64_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_64_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_64_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_64_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_64_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_64_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_64_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_64_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_64_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_64_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_64_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_64_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_64_128_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_64_128_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_64_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_64_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_64_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_64_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"));

  m.def("cutlass_tma_warp_specialized_custom_2_stage_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_128_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_128_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_128_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_128_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_128_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_128_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_128_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_128_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_128_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_128_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_128_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_128_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_128_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"));

  m.def("cutlass_tma_warp_specialized_custom_2_stage_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_256_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_256_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_256_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_256_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_256_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_256_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_256_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_256_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_2_stage_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_2_stage_256_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));

  
  // custom. no cooperative 3 stage
  m.def("cutlass_tma_warp_specialized_custom_3_stage_64_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_64_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_64_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_64_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_64_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_64_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_64_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_64_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_64_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_64_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_64_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_64_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_64_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_64_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_64_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_64_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_64_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_64_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_64_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_64_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_64_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_64_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_64_128_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_64_128_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_64_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_64_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_64_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_64_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"));

  m.def("cutlass_tma_warp_specialized_custom_3_stage_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_128_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_128_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_128_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_128_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_128_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_128_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_128_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_128_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_128_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_128_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_128_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_128_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_128_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"));

  m.def("cutlass_tma_warp_specialized_custom_3_stage_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_256_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_256_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_256_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_256_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_256_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_256_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_256_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_256_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_256_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));


  // custom 3 stage cooperative streamk naive simt
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_128_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"));

  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_3_stage_naive_simt_2_1_1_256_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));

  // custom 3 stage cooperative naive simt
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_128_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"));

  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_custom_3_stage_naive_simt_2_1_1_256_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));

  // custom. no cooperative 3 stage naive simt
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_128_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_128_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_64_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"));

  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_128_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"));

  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"));
  m.def("cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&cutlass_tma_warp_specialized_custom_3_stage_naive_simt_256_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"));

//   m.def("fp8_custom",
//     py::overload_cast<int, int, int, const at::Tensor&, const at::Tensor&>(&fp8_custom),
//     py::arg("M"),
//     py::arg("N"),
//     py::arg("K"),
//     py::arg("A"),
//     py::arg("B"));

  
//   m.def("fp16_baseline",
//     py::overload_cast<int, int, int, const at::Tensor&, const at::Tensor&>(&fp16_baseline),
//     py::arg("M"),
//     py::arg("N"),
//     py::arg("K"),
//     py::arg("A"),
//     py::arg("B"));

//   m.def("fp16_custom",
//       py::overload_cast<int, int, int, const at::Tensor&, const at::Tensor&, const at::Tensor&>(&fp16_custom),
//       py::arg("M"),
//       py::arg("N"),
//       py::arg("K"),
//       py::arg("A1"),
//       py::arg("A2"),
//       py::arg("B"));
}
