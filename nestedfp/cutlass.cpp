// This file was automatically generated by the CUTLASS 3.5.1 Python interface (https://github.com/nvidia/cutlass/python)

#include <torch/extension.h>
#include <ATen/ATen.h>
#include <pybind11/stl.h>
#include <cassert>
#include <stdexcept>
#include <vector>
#include <utility>


template <int Tm, int Tn, int Tk>
void cutlass_tma_warp_specialized_kernel(const at::Tensor& A, const at::Tensor& B, at::Tensor& D);

void cutlass_tma_warp_specialized_64_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 16, 64>(A, B, D); }
void cutlass_tma_warp_specialized_64_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 16, 128>(A, B, D); }
void cutlass_tma_warp_specialized_64_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 16, 256>(A, B, D); }
void cutlass_tma_warp_specialized_64_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 32, 64>(A, B, D); }
void cutlass_tma_warp_specialized_64_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 32, 128>(A, B, D); }
void cutlass_tma_warp_specialized_64_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 32, 256>(A, B, D); }
void cutlass_tma_warp_specialized_64_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 64, 64>(A, B, D); }
void cutlass_tma_warp_specialized_64_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 64, 128>(A, B, D); }
void cutlass_tma_warp_specialized_64_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 64, 256>(A, B, D); }
void cutlass_tma_warp_specialized_64_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 128, 64>(A, B, D); }
void cutlass_tma_warp_specialized_64_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 128, 128>(A, B, D); }
void cutlass_tma_warp_specialized_64_128_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 128, 256>(A, B, D); }
void cutlass_tma_warp_specialized_64_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 256, 64>(A, B, D); }
void cutlass_tma_warp_specialized_64_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<64, 256, 128>(A, B, D); }
void cutlass_tma_warp_specialized_128_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 16, 64>(A, B, D); }
void cutlass_tma_warp_specialized_128_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 16, 128>(A, B, D); }
void cutlass_tma_warp_specialized_128_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 16, 256>(A, B, D); }
void cutlass_tma_warp_specialized_128_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 32, 64>(A, B, D); }
void cutlass_tma_warp_specialized_128_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 32, 128>(A, B, D); }
void cutlass_tma_warp_specialized_128_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 32, 256>(A, B, D); }
void cutlass_tma_warp_specialized_128_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 64, 64>(A, B, D); }
void cutlass_tma_warp_specialized_128_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 64, 128>(A, B, D); }
void cutlass_tma_warp_specialized_128_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 64, 256>(A, B, D); }
void cutlass_tma_warp_specialized_128_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 128, 64>(A, B, D); }
void cutlass_tma_warp_specialized_128_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 128, 128>(A, B, D); }
void cutlass_tma_warp_specialized_128_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 256, 64>(A, B, D); }
void cutlass_tma_warp_specialized_128_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<128, 256, 128>(A, B, D); }
void cutlass_tma_warp_specialized_256_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 16, 64>(A, B, D); }
void cutlass_tma_warp_specialized_256_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 16, 128>(A, B, D); }
void cutlass_tma_warp_specialized_256_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 32, 64>(A, B, D); }
void cutlass_tma_warp_specialized_256_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 32, 128>(A, B, D); }
void cutlass_tma_warp_specialized_256_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 64, 64>(A, B, D); }
void cutlass_tma_warp_specialized_256_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 64, 128>(A, B, D); }
void cutlass_tma_warp_specialized_256_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 128, 64>(A, B, D); }
void cutlass_tma_warp_specialized_256_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 128, 128>(A, B, D); }
void cutlass_tma_warp_specialized_256_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_kernel<256, 256, 64>(A, B, D); }


template <int Tm, int Tn, int Tk, int C1, int C2, int C3>
void cutlass_tma_warp_specialized_cooperative_kernel(const at::Tensor& A, const at::Tensor& B, at::Tensor& D);

void cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 16, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 16, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 16, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 32, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 32, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 32, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 64, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 64, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 64, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 128, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 128, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 256, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_128_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<128, 256, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_256_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 16, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_256_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 16, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_256_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 32, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_256_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 32, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_256_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 64, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_256_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 64, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_256_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 128, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_256_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 128, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_256_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_kernel<256, 256, 64, 2, 1, 1>(A, B, D); }


template <int Tm, int Tn, int Tk, int C1, int C2, int C3>
void cutlass_tma_warp_specialized_cooperative_streamk_kernel(const at::Tensor& A, const at::Tensor& B, at::Tensor& D);

void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 16, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 16, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 16, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 32, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 32, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 32, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 64, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 64, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 64, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 128, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 128, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 256, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<128, 256, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_16_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<256, 16, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<256, 16, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_32_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<256, 32, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<256, 32, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_64_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<256, 64, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<256, 64, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_128_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<256, 128, 64, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<256, 128, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_256_64(const at::Tensor& A, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_kernel<256, 256, 64, 2, 1, 1>(A, B, D); }


template <int Tm, int Tn, int Tk>
void cutlass_tma_warp_specialized_custom_kernel(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D);

void cutlass_tma_warp_specialized_custom_64_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 16, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 16, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 16, 256>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 32, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 32, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 32, 256>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 64, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 64, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 64, 256>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 128, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 128, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_128_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 128, 256>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 256, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_64_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<64, 256, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 16, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 16, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 16, 256>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 32, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 32, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 32, 256>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 64, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 64, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 64, 256>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 128, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 128, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 256, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_128_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<128, 256, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_256_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 16, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_256_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 16, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_256_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 32, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_256_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 32, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_256_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 64, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_256_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 64, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_256_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 128, 64>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_256_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 128, 128>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_custom_256_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_custom_kernel<256, 256, 64>(A1, A2, B, D); }


template <int Tm, int Tn, int Tk, int C1, int C2, int C3>
void cutlass_tma_warp_specialized_cooperative_custom_kernel(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D);

void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 16, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 16, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 16, 256, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 32, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 32, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 32, 256, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 64, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 64, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 64, 256, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 128, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 128, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 256, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<128, 256, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 16, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 16, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 32, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 32, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 64, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 64, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 128, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 128, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_custom_kernel<256, 256, 64, 2, 1, 1>(A1, A2, B, D); }


template <int Tm, int Tn, int Tk, int C1, int C2, int C3>
void cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D);

void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 16, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 16, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_16_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 16, 256, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 32, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 32, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_32_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 32, 256, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 64, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 64, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_64_256(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 64, 256, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 128, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 128, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 256, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_256_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<128, 256, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_16_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<256, 16, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_16_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<256, 16, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_32_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<256, 32, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_32_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<256, 32, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_64_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<256, 64, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_64_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<256, 64, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_128_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<256, 128, 64, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_128_128(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<256, 128, 128, 2, 1, 1>(A1, A2, B, D); }
void cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_256_64(const at::Tensor& A1, const at::Tensor& A2, const at::Tensor& B, at::Tensor& D) { return cutlass_tma_warp_specialized_cooperative_streamk_custom_kernel<256, 256, 64, 2, 1, 1>(A1, A2, B, D); }


template <int Tm, int Tn, int Tk, int C1, int C2, int C3>
void cutlass_tma_warp_specialized_fp8_scale_kernel(const at::Tensor& A, const at::Tensor& B, at::Tensor& D);

void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 16, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 16, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 16, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 32, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 32, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 32, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 64, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 64, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 64, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 128, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 128, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 128, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 256, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_256_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<64, 256, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 16, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 16, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 16, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 32, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 32, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 32, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 64, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 64, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 64, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 128, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_128_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 128, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 256, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_256_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<128, 256, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<256, 16, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<256, 16, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<256, 32, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<256, 32, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<256, 64, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<256, 64, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<256, 128, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_128_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<256, 128, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_fp8_scale_kernel<256, 256, 128, 2, 1, 1>(A, B, D); }


template <int Tm, int Tn, int Tk, int C1, int C2, int C3>
void cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel(const at::Tensor& A, const at::Tensor& B, at::Tensor&D);

void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 16, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 16, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 16, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 32, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 32, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 32, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 64, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 64, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_512(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 64, 512, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 128, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_128_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 128, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 256, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_256_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<128, 256, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_16_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<256, 16, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_16_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<256, 16, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_32_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<256, 32, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_32_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<256, 32, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_64_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<256, 64, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_64_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<256, 64, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_128_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<256, 128, 128, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_128_256(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<256, 128, 256, 2, 1, 1>(A, B, D); }
void cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_256_128(const at::Tensor& A, const at::Tensor& B, at::Tensor&D) { return cutlass_tma_warp_specialized_cooperative_fp8_scale_kernel<256, 256, 128, 2, 1, 1>(A, B, D); }


void divide_fp16(const at::Tensor& S, const at::Tensor& D1, const at::Tensor& D2);
void merge_fp8(const at::Tensor& S1, const at::Tensor& S2, const at::Tensor& D);


PYBIND11_MODULE(TORCH_EXTENSION_NAME, m) {
  m.def("divide_fp16", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&divide_fp16), py::arg("S"), py::arg("D1"), py::arg("D2"));
  m.def("merge_fp8", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&>(&merge_fp8), py::arg("S1"), py::arg("S2"), py::arg("D"));

  // baseline. no cooperative
  m.def("cutlass_tma_warp_specialized_64_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_128_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_128_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_256_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_64_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_64_256_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_256_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_128_256_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_256_256_64), py::arg("A"), py::arg("B"), py::arg("D"));

  // baseline. cooperative
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_256_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_128_256_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_256_256_64), py::arg("A"), py::arg("B"), py::arg("D"));

  // baseline. cooperative streamk
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_256_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_128_256_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_16_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_32_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_64_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_128_64), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_2_1_1_256_256_64), py::arg("A"), py::arg("B"), py::arg("D"));
  
  // custom. no cooperative
  m.def("cutlass_tma_warp_specialized_custom_64_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_128_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_128_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_64_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_64_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_128_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_custom_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_custom_256_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));

  // custom cooperative
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_128_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_2_1_1_custom_256_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  
  // custom cooperative streamk
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_16_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_32_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_64_256), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_128_256_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_16_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_16_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_16_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_32_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_32_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_32_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_64_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_64_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_64_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_128_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_128_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_128_128), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_256_64", py::overload_cast<const at::Tensor&, const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_streamk_custom_2_1_1_256_256_64), py::arg("A1"), py::arg("A2"), py::arg("B"), py::arg("D"));

  // fp8. no cooperative
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_16_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_32_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_64_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_128_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_256_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_256_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_64_256_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_16_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_32_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_64_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_128_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_128_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_256_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_256_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_128_256_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_128_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_128_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_fp8_scale_2_1_1_256_256_128), py::arg("A"), py::arg("B"), py::arg("D"));

  // fp8. cooperative
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_16_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_32_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_512", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_64_512), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_128_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_128_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_256_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_256_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_128_256_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_16_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_16_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_16_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_16_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_32_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_32_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_32_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_32_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_64_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_64_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_64_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_64_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_128_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_128_128), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_128_256", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_128_256), py::arg("A"), py::arg("B"), py::arg("D"));
  m.def("cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_256_128", py::overload_cast<const at::Tensor&, const at::Tensor&, at::Tensor&>(&cutlass_tma_warp_specialized_cooperative_fp8_scale_2_1_1_256_256_128), py::arg("A"), py::arg("B"), py::arg("D"));
}
